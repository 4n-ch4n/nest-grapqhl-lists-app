# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type AuthReponse {
  token: String!
  user: User!
}

input CreateItemInput {
  name: String!
  quantityUnits: String
}

input CreateListInput {
  name: String!
}

input CreateListItemInput {
  completed: Boolean = false
  itemId: ID!
  listId: ID!
  quantity: Int = 0
}

type Item {
  id: ID!
  listItem: [ListItem!]!
  name: String!
  quantityUnits: String
  user: User!
}

type List {
  id: ID!
  items(limit: Int = 10, offset: Int = 0, search: String): [ListItem!]!
  name: String!
  totalItems: Int!
  user: User!
}

type ListItem {
  completed: Boolean!
  id: ID!
  item: Item!
  list: List!
  quantity: Float!
}

type Mutation {
  blockUser(id: ID!): User!
  createItem(createItemInput: CreateItemInput!): Item!
  createList(createListInput: CreateListInput!): List!
  createListItem(createListItemInput: CreateListItemInput!): ListItem!
  removeItem(id: ID!): Item!
  removeList(id: ID!): List!
  seed: Boolean!
  signin(signinInput: SigninInput!): AuthReponse!
  signup(signupInput: SignupInput!): AuthReponse!
  updateItem(updateItemInput: UpdateItemInput!): Item!
  updateList(updateListInput: UpdateListInput!): List!
  updateListItem(updateListItemInput: UpdateListItemInput!): ListItem!
  updateUser(updateUserInput: UpdateUserInput!): User!
}

type Query {
  item(id: ID!): Item!
  items(limit: Int = 10, offset: Int = 0, search: String): [Item!]!
  list(id: ID!): List!
  listItem(id: ID!): ListItem!
  lists(limit: Int = 10, offset: Int = 0, search: String): [List!]!
  revalidate: AuthReponse!
  user(id: ID!): User!
  users(limit: Int = 10, offset: Int = 0, roles: [ValidRoles!] = [], search: String): [User!]!
}

input SigninInput {
  email: String!
  password: String!
}

input SignupInput {
  email: String!
  fullName: String!
  password: String!
}

input UpdateItemInput {
  id: ID!
  name: String
  quantityUnits: String
}

input UpdateListInput {
  id: ID!
  name: String
}

input UpdateListItemInput {
  completed: Boolean = false
  id: ID!
  itemId: ID
  listId: ID
  quantity: Int = 0
}

input UpdateUserInput {
  email: String
  fullName: String
  id: ID!
  isActive: Boolean
  roles: ValidRoles
}

type User {
  email: String!
  fullName: String!
  id: ID!
  isActive: Boolean!
  itemCount: Int!
  items(limit: Int = 10, offset: Int = 0, search: String): [Item!]!
  lastUpdateBy: User
  listCount: Int!
  lists(limit: Int = 10, offset: Int = 0, search: String): [List!]!
  roles: [String!]!
}

enum ValidRoles {
  admin
  superUser
  user
}