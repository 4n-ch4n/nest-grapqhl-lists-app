// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Item {
  id String @id @default(uuid())
  name String
  quantityUnits String?
  userId String
  user User @relation(fields: [userId], references: [id])
  listItem ListItem[]
  @@index(fields: [userId])
}

model List {
  id String @id @default(uuid())
  name String
  userId String
  user User @relation(fields: [userId], references: [id])
  listItem ListItem[]
  @@index(fields: [userId])
}

model ListItem {
  id String @id @default(uuid())
  quantity Int
  completed Boolean
  listId String
  list List @relation(fields: [listId], references: [id])
  itemId String
  item Item @relation(fields: [itemId], references: [id])
} 

model User {
  id String @id @default(uuid())
  fullName String
  email String @unique
  password String
  roles String[] @default(["user"])
  isActive Boolean @default(true)
  lastUpdateById String?
  lastUpdateBy User? @relation("UserUpdates", fields: [lastUpdateById], references: [id])
  updatedUsers User[] @relation("UserUpdates")
  items Item[]
  lists List[]
}